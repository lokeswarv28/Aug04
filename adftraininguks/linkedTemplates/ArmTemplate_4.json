{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adftraininguks"
		},
		"Tr_event_zoho_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f40f180f-6064-493e-a43d-a9acbdf03c30/resourceGroups/rgtraininguks/providers/Microsoft.Storage/storageAccounts/adlstraininggen2"
		},
		"TR_TUMBLING_SALES_properties_pipeline_parameters_para_starttime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"TR_TUMBLING_SALES_properties_pipeline_parameters_para_endtime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_GETACCESSTOKEN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_WEB_CLIENT_ID",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}clientid?api-version=7.0",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_SET_CLIENTID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_WEB_CLIENT_ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CLIENTID",
							"value": {
								"value": "@activity('ACT_WEB_CLIENT_ID').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_WEB_CLIENT_SECRET",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}clientsecret?api-version=7.0",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_GEN_LKP_CODE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "zoho_code",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_CODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "code",
							"value": {
								"value": "@activity('ACT_GEN_LKP_CODE').output.firstRow.code_outh",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_WEB_GETACCESSTOKEN",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ACT_SET_CLIENTID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACT_SET_CLIENTID_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://accounts.zoho.in/oauth/v2/token?",
							"body": {
								"value": "@concat('client_id=',variables('CLIENTID'), '&client_secret=',variables('clientsecret'), '&grant_type=authorization_code' , '&code=', variables('code'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SETACCESSTOKEN",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_WEB_GETACCESSTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accesstoken",
							"value": {
								"value": "@activity('ACT_GEN_WEB_GETACCESSTOKEN').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SETREFRESHTOKEN",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_WEB_GETACCESSTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "refreshtoken",
							"value": {
								"value": "@activity('ACT_GEN_WEB_GETACCESSTOKEN').output.refresh_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_WEB_UPDATEACCESSTOKEN",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SETACCESSTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}accesstoken?api-version=7.0",
								"type": "Expression"
							},
							"body": {
								"value": "{\"value\" : \"@{variables('accesstoken')}\"}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_GEN_WEB_UPDATEACCESSTOKEN_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SETREFRESHTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}refreshtoken?api-version=7.0",
								"type": "Expression"
							},
							"body": {
								"value": "{\"value\" : \"@{variables('refreshtoken')}\"}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_SET_CLIENTID_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_WEB_CLIENT_SECRET",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "clientsecret",
							"value": {
								"value": "@activity('ACT_WEB_CLIENT_SECRET').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_kvurl": {
						"type": "string",
						"defaultValue": "https://kvtestinh14.vault.azure.net/secrets/"
					}
				},
				"variables": {
					"CLIENTID": {
						"type": "String"
					},
					"clientsecret": {
						"type": "String"
					},
					"code": {
						"type": "String"
					},
					"accesstoken": {
						"type": "String"
					},
					"refreshtoken": {
						"type": "String"
					}
				},
				"folder": {
					"name": "zoho"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GETLISTOFFILES_MODIFIEDDATES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_folder_details",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_GETMETA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName",
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_folder_details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_folder_details').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get_files_lastmodified",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_GETFILES_LASTMODIFIED",
											"type": "DatasetReference",
											"parameters": {
												"PARA_FILENAMES": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "Get_files_lastmodified",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "files_list",
										"value": {
											"value": "@concat('Filename ::', item().name , ':::', 'LastModifiedDate:' , activity('Get_files_lastmodified').output.lastModified)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Append variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "output_list",
										"value": {
											"value": "@variables('files_list')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"files_list": {
						"type": "Array"
					},
					"output_list": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T05:24:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GETMETA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_GEN_GETMETA",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_GETMETA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeEnd": {
									"value": "@addDays(utcNow(), -6 )",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ACT_GEN_GETMETA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_GETMETA').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name, 'C')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"testing": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-01T05:21:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_HISTORICAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_HISTORICALCONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dev].[SprocHistoricalLoad]",
											"storedProcedureParameters": {
												"colName": {
													"type": "String",
													"value": {
														"value": "@item().SourceColumnName",
														"type": "Expression"
													}
												},
												"endDate": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.para_endtime",
														"type": "Expression"
													}
												},
												"startDate": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.para_starttime",
														"type": "Expression"
													}
												},
												"tableName": {
													"type": "String",
													"value": {
														"value": "@item().SourceTableName",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SQL_HISTORICALCONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SQL_SINK_SALES",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().TargetTableName",
													"type": "Expression"
												},
												"schema": {
													"value": "@item().TargetSchema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_starttime": {
						"type": "string"
					},
					"para_endtime": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Historical_Loading"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-04T05:11:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INCEREMENTALLY_COPYFILES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ON DAILY BASIS",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@startOfDay(utcNow())",
										"type": "Expression"
									},
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_SRC_INCREMENTAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINK_INCREMENTAL",
								"type": "DatasetReference",
								"parameters": {
									"DIRECTORY": "IncrementalOutput"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"testing": {
						"type": "String"
					},
					"timestamp_with": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T06:09:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JSON_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "PostId"
										}
									},
									{
										"source": {
											"path": "[['caption']"
										},
										"sink": {
											"name": "caption"
										}
									},
									{
										"source": {
											"path": "[['comments_count']"
										},
										"sink": {
											"name": "comments_count"
										}
									},
									{
										"source": {
											"path": "[['like_count']"
										},
										"sink": {
											"name": "like_count"
										}
									},
									{
										"source": {
											"path": "[['media_type']"
										},
										"sink": {
											"name": "media_type"
										}
									},
									{
										"source": {
											"path": "[['media_url']"
										},
										"sink": {
											"name": "media_url"
										}
									},
									{
										"source": {
											"path": "[['timestamp']"
										},
										"sink": {
											"name": "timestamp"
										}
									},
									{
										"source": {
											"path": "$['business_discovery']['name']"
										},
										"sink": {
											"name": "name"
										}
									},
									{
										"source": {
											"path": "$['business_discovery']['username']"
										},
										"sink": {
											"name": "username"
										}
									},
									{
										"source": {
											"path": "$['business_discovery']['followers_count']"
										},
										"sink": {
											"name": "followers_count"
										}
									},
									{
										"source": {
											"path": "$['business_discovery']['media_count']"
										},
										"sink": {
											"name": "media_count"
										}
									}
								],
								"collectionReference": "$['business_discovery']['media']['data']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINK",
								"type": "DatasetReference",
								"parameters": {
									"ds_para_filename": {
										"value": "@variables('filename_vara')",
										"type": "Expression"
									},
									"ds_para_dircetory": {
										"value": "@variables('directory_vara')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "New",
							"value": "Hi hello welcome "
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"filename_vara": {
						"type": "String"
					},
					"directory_vara": {
						"type": "String"
					},
					"New": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-19T06:45:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JSON_TABLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json4_pat",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "set_ids",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "user_id",
							"value": {
								"value": "@activity('Lookup1').output.firstRow.business_discovery.id",
								"type": "Expression"
							}
						}
					},
					{
						"name": "foreach_data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "set_ids",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.firstRow.business_discovery.media.data",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_testing]",
										"storedProcedureParameters": {
											"caption": {
												"value": {
													"value": "@if(contains(item(), 'caption'),item().caption ,'no caption' )",
													"type": "Expression"
												},
												"type": "String"
											},
											"comment_count": {
												"value": {
													"value": "@item().comments_count",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"likes_count": {
												"value": {
													"value": "@item().like_count",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"media_type": {
												"value": {
													"value": "@item().media_type",
													"type": "Expression"
												},
												"type": "String"
											},
											"media_url": {
												"value": {
													"value": "@if(contains(item(), 'media_url'), item().media_url, 'unkown')\n",
													"type": "Expression"
												},
												"type": "String"
											},
											"post_id": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "String"
											},
											"posted_time": {
												"value": {
													"value": "@item().timestamp",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"user_id": {
												"value": {
													"value": "@variables('user_id')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase14",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"user_id": {
						"type": "String"
					},
					"testing": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-07-14T06:32:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STORE_ACTIVITY_STATUS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_GETMETA",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "error",
							"value": {
								"value": "@activity('ACT_GEN_GETMETA').status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_GETMETA",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_GETMETA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"test1": {
						"type": "String"
					},
					"test2": {
						"type": "String"
					},
					"error": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-30T05:51:13Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_VALIDATE_FILES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_VALIDATE",
								"type": "DatasetReference",
								"parameters": {
									"PARA_FILENAME": "2-WheelSales.csv"
								}
							},
							"timeout": "0.00:01:00",
							"sleep": 10
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Validation1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Validation1').output.exists, false)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "description",
										"value": "filenot found "
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"description": {
						"type": "String"
					},
					"default": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-30T04:39:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_DynamicLoading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_GEN_LKP_CONFIG",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_ADLS_CONFIGFILE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACT_ITCR_FOR_LKPOUPTUT",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_CONFIG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_LKP_CONFIG').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ACT_MT_COPY_FILES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_SRC_DYNAMIC",
											"type": "DatasetReference",
											"parameters": {
												"para_container": {
													"value": "@item().container",
													"type": "Expression"
												},
												"para_files": {
													"value": "@item().filename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_SINK_DYNAMIC",
											"type": "DatasetReference",
											"parameters": {
												"Para_directory": {
													"value": "@item().destinationfolder",
													"type": "Expression"
												},
												"para_filename": {
													"value": "@item().destinationfilename",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-26T05:40:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ADLSTRAINIG",
									"type": "LinkedServiceReference"
								},
								"path": {
									"value": "@concat('raw/Logs2','/',utcNow('yyyy-MM'), '/', utcNow('dd') )",
									"type": "Expression"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"sd": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-26T04:48:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4_copydata_dummy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText3_dummy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_GETFILES_LASTMODIFIED",
								"type": "DatasetReference",
								"parameters": {
									"PARA_FILENAMES": "4Book1_prefer_universites.xls"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T05:36:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_REST_ZOHO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ZOHO_PEOPLE_API",
					"type": "LinkedServiceReference",
					"parameters": {
						"Base_url": {
							"value": "@dataset().base_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"base_url": {
						"type": "string",
						"defaultValue": "https://people.zoho.com/people/api/"
					},
					"relative_url": {
						"type": "string",
						"defaultValue": "forms/employee/getRecords?sIndex=1&limit=100"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relative_url",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ZOHO_RESTAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ZOHO_PEOPLE_API",
					"type": "LinkedServiceReference",
					"parameters": {
						"Base_url": {
							"value": "@dataset().base_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"relative_url": {
						"type": "string"
					},
					"base_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relative_url",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_DF_Tes1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "LS_ADLS_ADLSTRAINIG",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          OEM as string,",
						"          Model as string,",
						"          Segment as string,",
						"          Month as string,",
						"          Year as integer,",
						"          NoOfSales as integer,",
						"          EngineCapacity as string,",
						"          Mileage as string,",
						"          {Model Price} as string,",
						"          {Dealer location} as string,",
						"          Region as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 3,",
						"          OEM",
						"     )) ~> source1",
						"source1 select(mapColumn(",
						"          OEM,",
						"          Model,",
						"          Segment,",
						"          Month,",
						"          Year,",
						"          NoOfSales,",
						"          EngineCapacity,",
						"          Mileage,",
						"          {Model Price},",
						"          Region",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'generic',",
						"     folderPath: 'test_dataflows',",
						"     truncate: true,",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_ZOHO_APIDATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_GEN_WEB_RETRIVE_ACESSTOKEN",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}accesstoken?api-version=7.0",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_WEB_RETRIVE_ACESSTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "acc_token",
							"value": {
								"value": "@activity('ACT_GEN_WEB_RETRIVE_ACESSTOKEN').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@concat('Zoho-oauthtoken ',variables('acc_token'))",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ZOHO_RESTAPI",
								"type": "DatasetReference",
								"parameters": {
									"relative_url": {
										"value": "forms/employee/getRecords",
										"type": "Expression"
									},
									"base_url": {
										"value": "https://people.zoho.in/people/api/",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Json4_zoho",
								"type": "DatasetReference",
								"parameters": {
									"para_filename": "data_aug24.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_kvurl": {
						"type": "string",
						"defaultValue": "https://kvtestinh14.vault.azure.net/secrets/"
					}
				},
				"variables": {
					"acc_token": {
						"type": "String"
					}
				},
				"folder": {
					"name": "zoho"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ZOHO_RESTAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tr_event_zoho')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_GETACCESSTOKEN",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/Zoho_people_code",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Tr_event_zoho_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_GETACCESSTOKEN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_TUMBLING_SALES')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PL_HISTORICAL",
						"type": "PipelineReference"
					},
					"parameters": {
						"para_starttime": "[parameters('TR_TUMBLING_SALES_properties_pipeline_parameters_para_starttime')]",
						"para_endtime": "[parameters('TR_TUMBLING_SALES_properties_pipeline_parameters_para_endtime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2023-12-20T05:15:00Z",
					"endTime": "2023-12-27T05:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_HISTORICAL')]"
			]
		}
	]
}