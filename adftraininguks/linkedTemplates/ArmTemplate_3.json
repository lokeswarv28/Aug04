{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adftraininguks"
		},
		"LS_ZOHO_PEOPLE_API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().Base_url}"
		},
		"LS_ZOHO_PEOPLE_API_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "1000.HF4LM059JMMKPUJ1VKFDLG1O0C4D8E"
		},
		"TR_EVENT_SAMPLE2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f40f180f-6064-493e-a43d-a9acbdf03c30/resourceGroups/rgtraininguks/providers/Microsoft.Storage/storageAccounts/adlstraininggen2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_sheetName": {
						"type": "string"
					},
					"para_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().para_sheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().para_filename",
							"type": "Expression"
						},
						"fileSystem": "src"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "patty_data.json",
						"fileSystem": "src"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"business_discovery": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"username": {
									"type": "string"
								},
								"website": {
									"type": "string"
								},
								"profile_picture_url": {
									"type": "string"
								},
								"biography": {
									"type": "string"
								},
								"followers_count": {
									"type": "integer"
								},
								"media_count": {
									"type": "integer"
								},
								"media": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string"
													},
													"caption": {
														"type": "string"
													},
													"comments_count": {
														"type": "integer"
													},
													"like_count": {
														"type": "integer"
													},
													"media_type": {
														"type": "string"
													},
													"media_url": {
														"type": "string"
													},
													"owner": {
														"type": "object",
														"properties": {
															"id": {
																"type": "string"
															}
														}
													},
													"timestamp": {
														"type": "string"
													}
												}
											}
										},
										"paging": {
											"type": "object",
											"properties": {
												"cursors": {
													"type": "object",
													"properties": {
														"before": {
															"type": "string"
														},
														"after": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"id": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "api.json",
						"folderPath": "API",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "employees"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"status": {
							"type": "string"
						},
						"data": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer"
									},
									"employee_name": {
										"type": "string"
									},
									"employee_salary": {
										"type": "integer"
									},
									"employee_age": {
										"type": "integer"
									},
									"profile_image": {
										"type": "string"
									}
								}
							}
						},
						"message": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json4_pat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "fb_data2.json",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"business_discovery": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"username": {
									"type": "string"
								},
								"website": {
									"type": "string"
								},
								"profile_picture_url": {
									"type": "string"
								},
								"biography": {
									"type": "string"
								},
								"followers_count": {
									"type": "integer"
								},
								"media_count": {
									"type": "integer"
								},
								"media": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"like_count": {
														"type": "integer"
													},
													"media_url": {
														"type": "string"
													},
													"caption": {
														"type": "string"
													},
													"comments_count": {
														"type": "integer"
													},
													"timestamp": {
														"type": "string"
													},
													"media_type": {
														"type": "string"
													},
													"id": {
														"type": "string"
													}
												}
											}
										},
										"paging": {
											"type": "object",
											"properties": {
												"cursors": {
													"type": "object",
													"properties": {
														"after": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"id": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json4_zoho')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().para_filename",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"status": {
							"type": "string"
						},
						"data": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer"
									},
									"employee_name": {
										"type": "string"
									},
									"employee_salary": {
										"type": "integer"
									},
									"employee_age": {
										"type": "integer"
									},
									"profile_image": {
										"type": "string"
									}
								}
							}
						},
						"message": {
							"type": "string"
						},
						"business_discovery": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"username": {
									"type": "string"
								},
								"website": {
									"type": "string"
								},
								"profile_picture_url": {
									"type": "string"
								},
								"biography": {
									"type": "string"
								},
								"followers_count": {
									"type": "integer"
								},
								"media_count": {
									"type": "integer"
								},
								"media": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"like_count": {
														"type": "integer"
													},
													"media_url": {
														"type": "string"
													},
													"caption": {
														"type": "string"
													},
													"comments_count": {
														"type": "integer"
													},
													"timestamp": {
														"type": "string"
													},
													"media_type": {
														"type": "string"
													},
													"id": {
														"type": "string"
													}
												}
											}
										},
										"paging": {
											"type": "object",
											"properties": {
												"cursors": {
													"type": "object",
													"properties": {
														"after": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"id": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"PARA_DIRECTORY": {
						"type": "string"
					},
					"PARA_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().PARA_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().PARA_DIRECTORY, '/' , utcNow('yyyy-MM'), '/', utcNow('dd'))\n",
							"type": "Expression"
						},
						"fileSystem": "generic"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/zoho_code')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Zoho_people_code.csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code_outh",
						"type": "String"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ZOHO_PEOPLE_API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Base_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_ZOHO_PEOPLE_API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('LS_ZOHO_PEOPLE_API_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "clientsecret"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_EVENT_SAMPLE2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_TR_EVENT_SAMPLE",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_3",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/Events/csv",
					"blobPathEndsWith": "holidays.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TR_EVENT_SAMPLE2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_SAMPLE_SCHEDULE')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_SCHEDULE_dEMO",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2024-08-03T05:48:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY2WHEELS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_GEN_SCRIPT_PIPELINES",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SET_STARTTIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "select * from [dev].[pipelines2] where PipelineName = '@{pipeline().Pipeline}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ACT_GEN_SET_SRCFILENAME",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SCRIPT_PIPELINES",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_Src_filename",
							"value": {
								"value": "@json(activity('ACT_GEN_SCRIPT_PIPELINES').output.resultSets[0].rows[0].PipelineParameters).para_filenamesrc",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_SINKFILENAME",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SCRIPT_PIPELINES",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_Sink_filename",
							"value": {
								"value": "@json(activity('ACT_GEN_SCRIPT_PIPELINES').output.resultSets[0].rows[0].PipelineParameters).para_filenamesink",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_MT_COPYCSV",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@json(activity('Script1').output.resultSets[0].rows[0].json_output)",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_SRC_GENERICCSV",
								"type": "DatasetReference",
								"parameters": {
									"para_filename": {
										"value": "@variables('var_Src_filename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"PARA_DIRECTORY": {
										"value": "@split(variables('var_Sink_filename'), '.')[0]",
										"type": "Expression"
									},
									"PARA_FILENAME": {
										"value": "@variables('var_Sink_filename')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ACT_GEN_SET_STARTTIME",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_sttime",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SPROC_2WHEELS",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_MT_COPYCSV",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dev].[sp_InsertOrUpdateRunActivity]",
							"storedProcedureParameters": {
								"ActivityEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ActivityStartTime": {
									"value": {
										"value": "@variables('var_sttime')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"completedstage": {
									"value": "Raw",
									"type": "String"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('ACT_MT_COPYCSV').status",
										"type": "Expression"
									},
									"type": "String"
								},
								"Fk_PipelineID": {
									"value": {
										"value": "@activity('ACT_GEN_SCRIPT_PIPELINES').output.resultSets[0].rows[0].Pk_PipelineID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunDate": {
									"value": {
										"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SET_SRCFILENAME",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ACT_GEN_SET_SINKFILENAME",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC [dev].[sp_GetColumnMappingActivity] @ParameterValueSink = '@{variables('var_Src_filename')}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_Src_filename": {
						"type": "String"
					},
					"var_Sink_filename": {
						"type": "String"
					},
					"var_sttime": {
						"type": "String"
					},
					"testing": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Generic/RAW/CSV"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-04T03:15:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPYAPIDATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:05:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_RESTAPI_DEMO",
								"type": "DatasetReference",
								"parameters": {
									"ROUTER": "employees"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Json2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-23T05:47:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPYDATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_MT_COPY_DEMO",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": true,
									"partitionRootPath": "raw/25May/Year=2024/Month=05"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OEM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "date",
											"type": "String"
										},
										"sink": {
											"name": "date",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_SRC_ENABLEPARTITON",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINK",
								"type": "DatasetReference",
								"parameters": {
									"ds_para_filename": {
										"value": "@pipeline().parameters.pl_para_filename",
										"type": "Expression"
									},
									"ds_para_dircetory": {
										"value": "@pipeline().parameters.pl_para_directory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ACT_MT_COPY_DEMO_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OEM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINK",
								"type": "DatasetReference",
								"parameters": {
									"ds_para_filename": {
										"value": "@pipeline().parameters.pl_para_filename",
										"type": "Expression"
									},
									"ds_para_dircetory": {
										"value": "@pipeline().parameters.pl_para_directory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "ACT_MT_COPY_DEMO_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pl_para_filename": {
						"type": "string"
					},
					"pl_para_directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-15T06:12:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPYDATAHTTPCONNECTOR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Json3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-23T06:01:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json3')]",
				"[concat(variables('factoryId'), '/datasets/Json2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPYDATA_DYNAMICMAPPING')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OEM",
											"type": "Int64",
											"physicalType": "String"
										},
										"sink": {
											"name": "OEM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_METACOLUMNS_SOURCE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_METACOLUMNS_SINK",
								"type": "DatasetReference",
								"parameters": {
									"FILENAMEE": "2_wheels_mapping.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_json": {
						"type": "string",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "OEM",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "OEM",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Month",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Month",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Year",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Year",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "NoOfSales",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "NoOfSales",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "EngineCapacity",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "EngineCapacity",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Mileage",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Mileage",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Model Price",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Model Price",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Dealer location",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Dealer location",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Region",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Region",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-22T05:20:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_EXCEL_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "src//Global Superstore.xls"
							},
							{
								"name": "Destination",
								"value": "raw/@{pipeline().parameters.pl_para_sheet}/@{concat(pipeline().parameters.pl_para_sheet, '_', utcNow('yyyyMMdd HH:mm'), '.csv')}"
							},
							{
								"name": "demo",
								"value": "for demo excel to csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_sRC_EXCEL",
								"type": "DatasetReference",
								"parameters": {
									"para_sheet": {
										"value": "@pipeline().parameters.pl_para_sheet",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINK_EXCEL",
								"type": "DatasetReference",
								"parameters": {
									"para_dir": {
										"value": "@pipeline().parameters.pl_para_sheet",
										"type": "Expression"
									},
									"para_file": {
										"value": "@pipeline().parameters.pl_para_sheet",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pl_para_sheet": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-18T06:20:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_UNZIP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINKUZIP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_SRC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-26T05:09:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DELETE_OLDERFILES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_GETMETA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeEnd": {
									"value": "@addDays(utcNow(), -6)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_DELETE_TEST",
											"type": "DatasetReference",
											"parameters": {
												"para_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-01T06:28:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GETACCESSTOKEN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_WEB_CLIENT_ID",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}clientid?api-version=7.0",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_SET_CLIENTID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_WEB_CLIENT_ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CLIENTID",
							"value": {
								"value": "@activity('ACT_WEB_CLIENT_ID').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_WEB_CLIENT_SECRET",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}clientsecret?api-version=7.0",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_GEN_LKP_CODE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "zoho_code",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_CODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "code",
							"value": {
								"value": "@activity('ACT_GEN_LKP_CODE').output.firstRow.code_outh",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_WEB_GETACCESSTOKEN",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ACT_SET_CLIENTID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACT_SET_CLIENTID_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://accounts.zoho.in/oauth/v2/token?",
							"body": {
								"value": "@concat('client_id=',variables('CLIENTID'), '&client_secret=',variables('clientsecret'), '&grant_type=authorization_code' , '&code=', variables('code'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SETACCESSTOKEN",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_WEB_GETACCESSTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accesstoken",
							"value": {
								"value": "@activity('ACT_GEN_WEB_GETACCESSTOKEN').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SETREFRESHTOKEN",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_WEB_GETACCESSTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "refreshtoken",
							"value": {
								"value": "@activity('ACT_GEN_WEB_GETACCESSTOKEN').output.refresh_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_WEB_UPDATEACCESSTOKEN",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SETACCESSTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}accesstoken?api-version=7.0",
								"type": "Expression"
							},
							"body": {
								"value": "{\"value\" : \"@{variables('accesstoken')}\"}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_GEN_WEB_UPDATEACCESSTOKEN_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SETREFRESHTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}refreshtoken?api-version=7.0",
								"type": "Expression"
							},
							"body": {
								"value": "{\"value\" : \"@{variables('refreshtoken')}\"}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_SET_CLIENTID_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_WEB_CLIENT_SECRET",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "clientsecret",
							"value": {
								"value": "@activity('ACT_WEB_CLIENT_SECRET').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_kvurl": {
						"type": "string",
						"defaultValue": "https://kvtestinh14.vault.azure.net/secrets/"
					}
				},
				"variables": {
					"CLIENTID": {
						"type": "String"
					},
					"clientsecret": {
						"type": "String"
					},
					"code": {
						"type": "String"
					},
					"accesstoken": {
						"type": "String"
					},
					"refreshtoken": {
						"type": "String"
					}
				},
				"folder": {
					"name": "zoho"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/zoho_code')]"
			]
		}
	]
}