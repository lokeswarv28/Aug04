{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adftraininguks"
		},
		"AzureSqlDatabase14_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase14'"
		},
		"LS_ADLS_ADLSTRAINIG_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS_ADLSTRAINIG'"
		},
		"LS_AZURE_SQL_04_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AZURE_SQL_04'"
		},
		"AzureKeyVault1new_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvjuly20.vault.azure.net/"
		},
		"AzureSqlDatabase14_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "july14server.database.windows.net"
		},
		"AzureSqlDatabase14_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "july14"
		},
		"AzureSqlDatabase14_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "user"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dummy.restapiexample.com/api/v1/"
		},
		"LS_ADLS_ADLSTRAINIG_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlstraininggen2.dfs.core.windows.net"
		},
		"LS_AZURE_SQL_04_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "triggerdb2.database.windows.net"
		},
		"LS_AZURE_SQL_04_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "triggerdb"
		},
		"LS_AZURE_SQL_04_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "user"
		},
		"LS_AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvtraining14.vault.azure.net/"
		},
		"LS_RESTAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dummy.restapiexample.com/api/v1/"
		},
		"TR_EVENT_SAMPLE_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f40f180f-6064-493e-a43d-a9acbdf03c30/resourceGroups/rgtraininguks/providers/Microsoft.Storage/storageAccounts/adlstraininggen2"
		},
		"TR_EVENT_SAMPLE2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f40f180f-6064-493e-a43d-a9acbdf03c30/resourceGroups/rgtraininguks/providers/Microsoft.Storage/storageAccounts/adlstraininggen2"
		},
		"Tr_event_zoho_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f40f180f-6064-493e-a43d-a9acbdf03c30/resourceGroups/rgtraininguks/providers/Microsoft.Storage/storageAccounts/adlstraininggen2"
		},
		"TR_TUMBLING_SALES_properties_pipeline_parameters_para_starttime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"TR_TUMBLING_SALES_properties_pipeline_parameters_para_endtime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web_reader",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_url}test?api-version=7.0",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web_reader",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_value",
							"value": {
								"value": "int(963258)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_url}test?api-version=7.0",
								"type": "Expression"
							},
							"body": {
								"value": "{\"value\" : \"@{variables('var_value')}\"}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_url": {
						"type": "string",
						"defaultValue": "https://kvjuly20.vault.azure.net/secrets/"
					}
				},
				"variables": {
					"testing": {
						"type": "String"
					},
					"var_value": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-03T05:46:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_APPEND')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Marks",
							"value": {
								"value": "@int('97')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Append variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "output_marks",
							"value": {
								"value": "@variables('Marks')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Dummy failure",
							"errorCode": "500"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Marks": {
						"type": "Array",
						"defaultValue": [
							10,
							20,
							30
						]
					},
					"output_marks": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-25T06:07:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY2WHEELS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_GEN_SCRIPT_PIPELINES",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SET_STARTTIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "select * from [dev].[pipelines2] where PipelineName = '@{pipeline().Pipeline}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ACT_GEN_SET_SRCFILENAME",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SCRIPT_PIPELINES",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_Src_filename",
							"value": {
								"value": "@json(activity('ACT_GEN_SCRIPT_PIPELINES').output.resultSets[0].rows[0].PipelineParameters).para_filenamesrc",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_SINKFILENAME",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SCRIPT_PIPELINES",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_Sink_filename",
							"value": {
								"value": "@json(activity('ACT_GEN_SCRIPT_PIPELINES').output.resultSets[0].rows[0].PipelineParameters).para_filenamesink",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_MT_COPYCSV",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@json(activity('Script1').output.resultSets[0].rows[0].json_output)",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_SRC_GENERICCSV",
								"type": "DatasetReference",
								"parameters": {
									"para_filename": {
										"value": "@variables('var_Src_filename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"PARA_DIRECTORY": {
										"value": "@split(variables('var_Sink_filename'), '.')[0]",
										"type": "Expression"
									},
									"PARA_FILENAME": {
										"value": "@variables('var_Sink_filename')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ACT_GEN_SET_STARTTIME",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_sttime",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SPROC_2WHEELS",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_MT_COPYCSV",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dev].[sp_InsertOrUpdateRunActivity]",
							"storedProcedureParameters": {
								"ActivityEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ActivityStartTime": {
									"value": {
										"value": "@variables('var_sttime')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"completedstage": {
									"value": "Raw",
									"type": "String"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('ACT_MT_COPYCSV').status",
										"type": "Expression"
									},
									"type": "String"
								},
								"Fk_PipelineID": {
									"value": {
										"value": "@activity('ACT_GEN_SCRIPT_PIPELINES').output.resultSets[0].rows[0].Pk_PipelineID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunDate": {
									"value": {
										"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SET_SRCFILENAME",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ACT_GEN_SET_SINKFILENAME",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC [dev].[sp_GetColumnMappingActivity] @ParameterValueSink = '@{variables('var_Src_filename')}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_Src_filename": {
						"type": "String"
					},
					"var_Sink_filename": {
						"type": "String"
					},
					"var_sttime": {
						"type": "String"
					},
					"testing": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Generic/RAW/CSV"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-04T03:15:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_GENERICCSV')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPYAPIDATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:05:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_RESTAPI_DEMO",
								"type": "DatasetReference",
								"parameters": {
									"ROUTER": "employees"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Json2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-23T05:47:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_RESTAPI_DEMO')]",
				"[concat(variables('factoryId'), '/datasets/Json2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPYDATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_MT_COPY_DEMO",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": true,
									"partitionRootPath": "raw/25May/Year=2024/Month=05"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OEM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "date",
											"type": "String"
										},
										"sink": {
											"name": "date",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_SRC_ENABLEPARTITON",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINK",
								"type": "DatasetReference",
								"parameters": {
									"ds_para_filename": {
										"value": "@pipeline().parameters.pl_para_filename",
										"type": "Expression"
									},
									"ds_para_dircetory": {
										"value": "@pipeline().parameters.pl_para_directory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ACT_MT_COPY_DEMO_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OEM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINK",
								"type": "DatasetReference",
								"parameters": {
									"ds_para_filename": {
										"value": "@pipeline().parameters.pl_para_filename",
										"type": "Expression"
									},
									"ds_para_dircetory": {
										"value": "@pipeline().parameters.pl_para_directory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "ACT_MT_COPY_DEMO_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pl_para_filename": {
						"type": "string"
					},
					"pl_para_directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-15T06:12:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_ENABLEPARTITON')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SINK')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPYDATAHTTPCONNECTOR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Json3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-23T06:01:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json3')]",
				"[concat(variables('factoryId'), '/datasets/Json2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPYDATA_DYNAMICMAPPING')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OEM",
											"type": "Int64",
											"physicalType": "String"
										},
										"sink": {
											"name": "OEM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NoOfSales",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EngineCapacity",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model Price",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer location",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_METACOLUMNS_SOURCE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_METACOLUMNS_SINK",
								"type": "DatasetReference",
								"parameters": {
									"FILENAMEE": "2_wheels_mapping.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_json": {
						"type": "string",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "OEM",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "OEM",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Month",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Month",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Year",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Year",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "NoOfSales",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "NoOfSales",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "EngineCapacity",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "EngineCapacity",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Mileage",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Mileage",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Model Price",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Model Price",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Dealer location",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Dealer location",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Region",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Region",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-22T05:20:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_METACOLUMNS_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/DS_METACOLUMNS_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_EXCEL_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "src//Global Superstore.xls"
							},
							{
								"name": "Destination",
								"value": "raw/@{pipeline().parameters.pl_para_sheet}/@{concat(pipeline().parameters.pl_para_sheet, '_', utcNow('yyyyMMdd HH:mm'), '.csv')}"
							},
							{
								"name": "demo",
								"value": "for demo excel to csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_sRC_EXCEL",
								"type": "DatasetReference",
								"parameters": {
									"para_sheet": {
										"value": "@pipeline().parameters.pl_para_sheet",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINK_EXCEL",
								"type": "DatasetReference",
								"parameters": {
									"para_dir": {
										"value": "@pipeline().parameters.pl_para_sheet",
										"type": "Expression"
									},
									"para_file": {
										"value": "@pipeline().parameters.pl_para_sheet",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pl_para_sheet": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-18T06:20:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_sRC_EXCEL')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SINK_EXCEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_UNZIP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINKUZIP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_SRC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-26T05:09:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SINKUZIP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DELETE_OLDERFILES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_GETMETA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeEnd": {
									"value": "@addDays(utcNow(), -6)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_DELETE_TEST",
											"type": "DatasetReference",
											"parameters": {
												"para_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-01T06:28:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_GETMETA')]",
				"[concat(variables('factoryId'), '/datasets/DS_DELETE_TEST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EMAILERROR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "email",
							"value": {
								"value": "@int('email')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_WEB_EMAIL",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-21.uksouth.logic.azure.com:443/workflows/57bc1a68e3fd4960841e79515fe6fd8c/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=UepypHMUoZYkVkMxv5Lcb4o0YzJg9Lq62bW1eV1cyUQ",
							"body": {
								"value": "{\n    'PipelineName' : '@{pipeline().Pipeline}',\n    'DatafactoryName' : '@{pipeline().DataFactory}',\n    'RunId' : '@{pipeline().RunId}'\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"email": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-23T05:04:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FOREACH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_ITCR_FOR_DEMO",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,11)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-26T05:20:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GETACCESSTOKEN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_WEB_CLIENT_ID",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}clientid?api-version=7.0",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_SET_CLIENTID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_WEB_CLIENT_ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CLIENTID",
							"value": {
								"value": "@activity('ACT_WEB_CLIENT_ID').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_WEB_CLIENT_SECRET",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}clientsecret?api-version=7.0",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_SET_CLIENTID_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_WEB_CLIENT_SECRET",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "clientsecret",
							"value": {
								"value": "@activity('ACT_WEB_CLIENT_SECRET').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_LKP_CODE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "zoho_code",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_CODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "code",
							"value": {
								"value": "@activity('ACT_GEN_LKP_CODE').output.firstRow.code_outh",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_WEB_GETACCESSTOKEN",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ACT_SET_CLIENTID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACT_SET_CLIENTID_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://accounts.zoho.in/oauth/v2/token?",
							"body": {
								"value": "@concat('client_id=',variables('CLIENTID'), '&client_secret=',variables('clientsecret'), '&grant_type=authorization_code' , '&code=', variables('code'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SETACCESSTOKEN",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_WEB_GETACCESSTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accesstoken",
							"value": {
								"value": "@activity('ACT_GEN_WEB_GETACCESSTOKEN').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SETREFRESHTOKEN",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_WEB_GETACCESSTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "refreshtoken",
							"value": {
								"value": "@activity('ACT_GEN_WEB_GETACCESSTOKEN').output.refresh_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_WEB_UPDATEACCESSTOKEN",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SETACCESSTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}accesstoken?api-version=7.0",
								"type": "Expression"
							},
							"body": {
								"value": "{\"value\" : \"@{variables('accesstoken')}\"}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ACT_GEN_WEB_UPDATEACCESSTOKEN_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SETREFRESHTOKEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {},
							"url": {
								"value": "@{pipeline().parameters.para_kvurl}refreshtoken?api-version=7.0",
								"type": "Expression"
							},
							"body": {
								"value": "{\"value\" : \"@{variables('refreshtoken')}\"}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_kvurl": {
						"type": "string",
						"defaultValue": "https://kvtestinh14.vault.azure.net/secrets/"
					}
				},
				"variables": {
					"CLIENTID": {
						"type": "String"
					},
					"clientsecret": {
						"type": "String"
					},
					"code": {
						"type": "String"
					},
					"accesstoken": {
						"type": "String"
					},
					"refreshtoken": {
						"type": "String"
					}
				},
				"folder": {
					"name": "zoho"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/zoho_code')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GETLISTOFFILES_MODIFIEDDATES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_folder_details",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_GETMETA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName",
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_folder_details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_folder_details').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get_files_lastmodified",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_GETFILES_LASTMODIFIED",
											"type": "DatasetReference",
											"parameters": {
												"PARA_FILENAMES": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "Get_files_lastmodified",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "files_list",
										"value": {
											"value": "@concat('Filename ::', item().name , ':::', 'LastModifiedDate:' , activity('Get_files_lastmodified').output.lastModified)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Append variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "output_list",
										"value": {
											"value": "@variables('files_list')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"files_list": {
						"type": "Array"
					},
					"output_list": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T05:24:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_GETMETA')]",
				"[concat(variables('factoryId'), '/datasets/DS_GETFILES_LASTMODIFIED')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GETMETA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_GEN_GETMETA",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_GETMETA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeEnd": {
									"value": "@addDays(utcNow(), -6 )",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ACT_GEN_GETMETA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_GETMETA').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name, 'C')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"testing": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-01T05:21:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_GETMETA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GIT_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_HISTORICAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_HISTORICALCONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dev].[SprocHistoricalLoad]",
											"storedProcedureParameters": {
												"colName": {
													"type": "String",
													"value": {
														"value": "@item().SourceColumnName",
														"type": "Expression"
													}
												},
												"endDate": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.para_endtime",
														"type": "Expression"
													}
												},
												"startDate": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.para_starttime",
														"type": "Expression"
													}
												},
												"tableName": {
													"type": "String",
													"value": {
														"value": "@item().SourceTableName",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SQL_HISTORICALCONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SQL_SINK_SALES",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().TargetTableName",
													"type": "Expression"
												},
												"schema": {
													"value": "@item().TargetSchema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_starttime": {
						"type": "string"
					},
					"para_endtime": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Historical_Loading"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-04T05:11:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_HISTORICALCONFIG')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_SINK_SALES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INCEREMENTALLY_COPYFILES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ON DAILY BASIS",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@startOfDay(utcNow())",
										"type": "Expression"
									},
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_SRC_INCREMENTAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINK_INCREMENTAL",
								"type": "DatasetReference",
								"parameters": {
									"DIRECTORY": "IncrementalOutput"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"testing": {
						"type": "String"
					},
					"timestamp_with": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T06:09:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_INCREMENTAL')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SINK_INCREMENTAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JSON_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "PostId"
										}
									},
									{
										"source": {
											"path": "[['caption']"
										},
										"sink": {
											"name": "caption"
										}
									},
									{
										"source": {
											"path": "[['comments_count']"
										},
										"sink": {
											"name": "comments_count"
										}
									},
									{
										"source": {
											"path": "[['like_count']"
										},
										"sink": {
											"name": "like_count"
										}
									},
									{
										"source": {
											"path": "[['media_type']"
										},
										"sink": {
											"name": "media_type"
										}
									},
									{
										"source": {
											"path": "[['media_url']"
										},
										"sink": {
											"name": "media_url"
										}
									},
									{
										"source": {
											"path": "[['timestamp']"
										},
										"sink": {
											"name": "timestamp"
										}
									},
									{
										"source": {
											"path": "$['business_discovery']['name']"
										},
										"sink": {
											"name": "name"
										}
									},
									{
										"source": {
											"path": "$['business_discovery']['username']"
										},
										"sink": {
											"name": "username"
										}
									},
									{
										"source": {
											"path": "$['business_discovery']['followers_count']"
										},
										"sink": {
											"name": "followers_count"
										}
									},
									{
										"source": {
											"path": "$['business_discovery']['media_count']"
										},
										"sink": {
											"name": "media_count"
										}
									}
								],
								"collectionReference": "$['business_discovery']['media']['data']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_SINK",
								"type": "DatasetReference",
								"parameters": {
									"ds_para_filename": {
										"value": "@variables('filename_vara')",
										"type": "Expression"
									},
									"ds_para_dircetory": {
										"value": "@variables('directory_vara')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "New",
							"value": "Hi hello welcome "
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"filename_vara": {
						"type": "String"
					},
					"directory_vara": {
						"type": "String"
					},
					"New": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-19T06:45:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JSON_TABLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json4_pat",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "set_ids",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "user_id",
							"value": {
								"value": "@activity('Lookup1').output.firstRow.business_discovery.id",
								"type": "Expression"
							}
						}
					},
					{
						"name": "foreach_data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "set_ids",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.firstRow.business_discovery.media.data",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_testing]",
										"storedProcedureParameters": {
											"caption": {
												"value": {
													"value": "@if(contains(item(), 'caption'),item().caption ,'no caption' )",
													"type": "Expression"
												},
												"type": "String"
											},
											"comment_count": {
												"value": {
													"value": "@item().comments_count",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"likes_count": {
												"value": {
													"value": "@item().like_count",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"media_type": {
												"value": {
													"value": "@item().media_type",
													"type": "Expression"
												},
												"type": "String"
											},
											"media_url": {
												"value": {
													"value": "@if(contains(item(), 'media_url'), item().media_url, 'unkown')\n",
													"type": "Expression"
												},
												"type": "String"
											},
											"post_id": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "String"
											},
											"posted_time": {
												"value": {
													"value": "@item().timestamp",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"user_id": {
												"value": {
													"value": "@variables('user_id')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase14",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"user_id": {
						"type": "String"
					},
					"testing": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-07-14T06:32:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json4_pat')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase14')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ROWSREADCOPIEDVALIDATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_GEN_LKP_PLCOPYLOGS",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nselect * from dev.pl_copydatalogs;\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACT_ITCR_FOR_LKPOUTPUTS",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_PLCOPYLOGS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_LKP_PLCOPYLOGS').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ACT_ITCR_IF_CONDITIONCHECK",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().rowsRead, item().rowsCopied)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Fail1",
												"type": "Fail",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"message": "404",
													"errorCode": "Failed"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "ACT_GEN_SET_VALIDATE",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "Var_passed",
													"value": {
														"value": "Validation successfull",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "test",
										"value": {
											"value": "@item().sheetname",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Var_passed": {
						"type": "String"
					},
					"test": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-04T03:15:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESDATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_GEN_SET_STARTTIME",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_sttime",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SCRIPT_PIPELINES",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SET_STARTTIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "select * from [dev].[pipelines2] where PipelineName = '@{pipeline().Pipeline}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ACT_GEN_SET_SRCTABLE",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SCRIPT_PIPELINES",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_src_table",
							"value": {
								"value": "@json(activity('ACT_GEN_SCRIPT_PIPELINES').output.resultSets[0].rows[0].PipelineParameters).para_srctable",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_SINKTABLE",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SCRIPT_PIPELINES",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_sink_table",
							"value": {
								"value": "@json(activity('ACT_GEN_SCRIPT_PIPELINES').output.resultSets[0].rows[0].PipelineParameters).para_sinktable",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_MT_COPYSQL",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SET_SRCTABLE",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ACT_GEN_SET_SINKTABLE",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"enableStaging": false
						}
					},
					{
						"name": "ACT_GEN_SPROC_SQL",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ACT_MT_COPYSQL",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dev].[sp_InsertOrUpdateRunActivity]",
							"storedProcedureParameters": {
								"ActivityEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ActivityStartTime": {
									"value": {
										"value": "@variables('var_sttime')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"completedstage": {
									"value": "Raw",
									"type": "String"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('ACT_MT_COPYSQL').status",
										"type": "Expression"
									},
									"type": "String"
								},
								"Fk_PipelineID": {
									"value": {
										"value": "@activity('ACT_GEN_SCRIPT_PIPELINES').output.resultSets[0].rows[0].Pk_PipelineID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunDate": {
									"value": {
										"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_sttime": {
						"type": "String"
					},
					"var_src_table": {
						"type": "String"
					},
					"var_sink_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Generic/RAW/SQL"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-04T03:15:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SCHEDULE_dEMO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1_schedule",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-03T05:53:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STORE_ACTIVITY_STATUS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_GETMETA",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "error",
							"value": {
								"value": "@activity('ACT_GEN_GETMETA').status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_GETMETA",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_GETMETA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"test1": {
						"type": "String"
					},
					"test2": {
						"type": "String"
					},
					"error": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-30T05:51:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_GETMETA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TR_EVENT_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-03T05:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_VALIDATE_FILES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_VALIDATE",
								"type": "DatasetReference",
								"parameters": {
									"PARA_FILENAME": "2-WheelSales.csv"
								}
							},
							"timeout": "0.00:01:00",
							"sleep": 10
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Validation1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Validation1').output.exists, false)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "description",
										"value": "filenot found "
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"description": {
						"type": "String"
					},
					"default": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-30T04:39:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_VALIDATE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_WEBACTVITY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_GEN_WEB_TESTING",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://dummy.restapiexample.com/api/v1/employees"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"email": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-23T04:54:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_sET')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var1",
							"value": "25"
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "setvar2",
								"value": "testing "
							}
						],
						"typeProperties": {
							"variableName": "b",
							"value": 20
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "c",
							"value": 25
						}
					},
					{
						"name": "Set variable4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "pipe_return",
									"value": {
										"type": "Expression",
										"content": "@add(variables('c'),variables('b') )"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var1": {
						"type": "String"
					},
					"result": {
						"type": "Integer",
						"defaultValue": 5
					},
					"b": {
						"type": "Integer"
					},
					"c": {
						"type": "Integer"
					},
					"output2": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-25T05:46:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_until')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('current_count'), variables('initial_count'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "current_count",
										"value": {
											"value": "@pipeline().parameters.para_current_count",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.00:01:00"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "initial_count",
							"value": 5
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_current_count": {
						"type": "int"
					}
				},
				"variables": {
					"initial_count": {
						"type": "Integer"
					},
					"current_count": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T05:02:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_DynamicLoading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_GEN_LKP_CONFIG",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_ADLS_CONFIGFILE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACT_ITCR_FOR_LKPOUPTUT",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_CONFIG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_LKP_CONFIG').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ACT_MT_COPY_FILES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_SRC_DYNAMIC",
											"type": "DatasetReference",
											"parameters": {
												"para_container": {
													"value": "@item().container",
													"type": "Expression"
												},
												"para_files": {
													"value": "@item().filename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_SINK_DYNAMIC",
											"type": "DatasetReference",
											"parameters": {
												"Para_directory": {
													"value": "@item().destinationfolder",
													"type": "Expression"
												},
												"para_filename": {
													"value": "@item().destinationfilename",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-26T05:40:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_CONFIGFILE')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SRC_DYNAMIC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_SINK_DYNAMIC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 2
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_sET",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "output2",
							"value": {
								"value": "@activity('Execute Pipeline1').output.pipelineReturnValue.pipe_return",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var2",
							"value": "56"
						}
					},
					{
						"name": "Str to int",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "intoutput",
							"value": {
								"value": "@int(variables('var2'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"output2": {
						"type": "Integer"
					},
					"var2": {
						"type": "String"
					},
					"intoutput": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-25T05:52:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_sET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ADLSTRAINIG",
									"type": "LinkedServiceReference"
								},
								"path": {
									"value": "@concat('raw/Logs2','/',utcNow('yyyy-MM'), '/', utcNow('dd') )",
									"type": "Expression"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"sd": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-26T04:48:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4_copydata_dummy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText3_dummy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_GETFILES_LASTMODIFIED",
								"type": "DatasetReference",
								"parameters": {
									"PARA_FILENAMES": "4Book1_prefer_universites.xls"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T05:36:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText3_dummy')]",
				"[concat(variables('factoryId'), '/datasets/DS_GETFILES_LASTMODIFIED')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4_if')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,2 )",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait_false",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait_true",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.para_condition",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "dev",
									"activities": [
										{
											"name": "Wait1_dev",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								},
								{
									"value": "test",
									"activities": [
										{
											"name": "Wait1_uat",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								},
								{
									"value": "prod",
									"activities": [
										{
											"name": "Wait1_prod",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Set variable_default",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "default",
										"value": "Sorry that case not defined"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_condition": {
						"type": "string"
					}
				},
				"variables": {
					"default": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-01T06:03:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "testing",
							"value": {
								"value": "@pipeline().parameters.para_test",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"para_test": {
						"type": "string"
					}
				},
				"variables": {
					"testing": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-21T09:57:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_CONFIGFILE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ReferenceDataTr.csv",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "storagacc",
						"type": "String"
					},
					{
						"name": "container",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					},
					{
						"name": "destcontainer",
						"type": "String"
					},
					{
						"name": "destinationfolder",
						"type": "String"
					},
					{
						"name": "destinationfilename",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_GETMETA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csv",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id ",
						"type": "String"
					},
					{
						"name": "Filename",
						"type": "String"
					},
					{
						"name": "FileType",
						"type": "String"
					},
					{
						"name": "sheetname",
						"type": "String"
					},
					{
						"name": "container",
						"type": "String"
					},
					{
						"name": "destcont",
						"type": "String"
					},
					{
						"name": "destfolder",
						"type": "String"
					},
					{
						"name": "destfilename",
						"type": "String"
					},
					{
						"name": "desexe",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_GETMETA_CONTROL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_container": {
						"type": "string"
					},
					"para_folder": {
						"type": "string"
					},
					"para_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().para_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().para_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().para_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_para_filename": {
						"type": "string"
					},
					"ds_para_dircetory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINK"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('Year=', utcNow('yyyy'), '/', 'Month=',utcNow('MM'), '/', 'date=', utcNow('dd'), '/', dataset().ds_para_filename, '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().ds_para_dircetory",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SINKDUMMY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_para_dir": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINK"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().ds_para_dir",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SINKUZIP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SINK"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Row ID",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "Ship Date",
						"type": "String"
					},
					{
						"name": "Ship Mode",
						"type": "String"
					},
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Market",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Product ID",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					},
					{
						"name": "Product Name",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Discount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Shipping Cost",
						"type": "String"
					},
					{
						"name": "Order Priority",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SINK_CSV_GENERIC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"PARA_DIRECTORY": {
						"type": "string"
					},
					"PARA_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().PARA_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().PARA_DIRECTORY, '/' , utcNow('yyyy-MM'), '/', utcNow('dd'))",
							"type": "Expression"
						},
						"fileSystem": "generic"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OEM",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "NoOfSales",
						"type": "String"
					},
					{
						"name": "EngineCapacity",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Model Price",
						"type": "String"
					},
					{
						"name": "Dealer location",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SINK_DYNAMIC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Para_directory": {
						"type": "string"
					},
					"para_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(utcNow('yyyy-MM'), '/', utcNow('dd'), '/', dataset().para_filename, '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Para_directory",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SINK_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_dir": {
						"type": "string"
					},
					"para_file": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINK"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().para_file, '_', utcNow('yyyyMMdd HH:mm'), '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().para_dir",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Education_Level",
						"type": "String"
					},
					{
						"name": "Line_Number",
						"type": "String"
					},
					{
						"name": "Employed",
						"type": "String"
					},
					{
						"name": "Unemployed",
						"type": "String"
					},
					{
						"name": "Industry",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Date_Inserted",
						"type": "String"
					},
					{
						"name": "dense_rank",
						"type": "String"
					},
					{
						"name": "filepath",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SINK_GENERIC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().para_filename",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SINK_INCREMENTAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DIRECTORY": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().DIRECTORY",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Error",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SPLITRANGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Split Column Range to Rows.csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PurchaseId",
						"type": "String"
					},
					{
						"name": "PurchaseUnits",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SchemaManagementDelta.csv",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Education_Level",
						"type": "String"
					},
					{
						"name": "Line_Number",
						"type": "String"
					},
					{
						"name": "Employed",
						"type": "String"
					},
					{
						"name": "Unemployed",
						"type": "String"
					},
					{
						"name": "Industry",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Date_Inserted",
						"type": "String"
					},
					{
						"name": "dense_rank",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_DYNAMIC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_container": {
						"type": "string"
					},
					"para_files": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().para_files",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().para_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_ENABLEPARTITON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "25May.csv",
						"folderPath": "25May/Year=2024/Month=05/date=19",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_GENERIC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_direc": {
						"type": "string"
					},
					"para_filenamee": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().para_filenamee",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().para_direc",
							"type": "Expression"
						},
						"fileSystem": "generic"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OEM",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "NoOfSales",
						"type": "String"
					},
					{
						"name": "EngineCapacity",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Model Price",
						"type": "String"
					},
					{
						"name": "Dealer location",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_GENERICCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().para_filename",
							"type": "Expression"
						},
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OEM",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "NoOfSales",
						"type": "String"
					},
					{
						"name": "EngineCapacity",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Model Price",
						"type": "String"
					},
					{
						"name": "Dealer location",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_INCREMENTAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csv",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Brand",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Body Type",
						"type": "String"
					},
					{
						"name": "FUEL TYPE",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "ENGINE",
						"type": "String"
					},
					{
						"name": "TRANSMISSION",
						"type": "String"
					},
					{
						"name": "Price range",
						"type": "String"
					},
					{
						"name": "Fuel Capacity (L)",
						"type": "String"
					},
					{
						"name": "Seating Capacity",
						"type": "String"
					},
					{
						"name": "Top_Speed in Km/h",
						"type": "String"
					},
					{
						"name": "No Of Cylinders",
						"type": "String"
					},
					{
						"name": "Year Of Sale",
						"type": "String"
					},
					{
						"name": "Month Of Sale ",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_PARTITIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Players",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_sRC_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_sheet": {
						"type": "string"
					}
				},
				"folder": {
					"name": "source"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().para_sheet",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Global Superstore.xls",
						"fileSystem": "src"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Row ID",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "Ship Date",
						"type": "String"
					},
					{
						"name": "Ship Mode",
						"type": "String"
					},
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Market",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Product ID",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					},
					{
						"name": "Product Name",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Discount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Shipping Cost",
						"type": "String"
					},
					{
						"name": "Order Priority",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZURESQL_LKP_CONFIG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZURE_SQL_04",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SrcContainer",
						"type": "nvarchar"
					},
					{
						"name": "SrcFolderName",
						"type": "nvarchar"
					},
					{
						"name": "SrcFileNames",
						"type": "nvarchar"
					},
					{
						"name": "DestinationContainer",
						"type": "nvarchar"
					},
					{
						"name": "DestinationFileName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dev",
					"table": "TConfigHistoricalLoad"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZURE_SQL_04')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DELETE_TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().para_filename",
							"type": "Expression"
						},
						"folderPath": "csv",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Brand",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Body Type",
						"type": "String"
					},
					{
						"name": "FUEL TYPE",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "ENGINE",
						"type": "String"
					},
					{
						"name": "TRANSMISSION",
						"type": "String"
					},
					{
						"name": "Price range",
						"type": "String"
					},
					{
						"name": "Fuel Capacity (L)",
						"type": "String"
					},
					{
						"name": "Seating Capacity",
						"type": "String"
					},
					{
						"name": "Top_Speed in Km/h",
						"type": "String"
					},
					{
						"name": "No Of Cylinders",
						"type": "String"
					},
					{
						"name": "Year Of Sale",
						"type": "String"
					},
					{
						"name": "Month Of Sale ",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GETFILES_LASTMODIFIED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"PARA_FILENAMES": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().PARA_FILENAMES",
							"type": "Expression"
						},
						"folderPath": "csv",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Brand",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Body Type",
						"type": "String"
					},
					{
						"name": "FUEL TYPE",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "ENGINE",
						"type": "String"
					},
					{
						"name": "TRANSMISSION",
						"type": "String"
					},
					{
						"name": "Price range",
						"type": "String"
					},
					{
						"name": "Fuel Capacity (L)",
						"type": "String"
					},
					{
						"name": "Seating Capacity",
						"type": "String"
					},
					{
						"name": "Top_Speed in Km/h",
						"type": "String"
					},
					{
						"name": "No Of Cylinders",
						"type": "String"
					},
					{
						"name": "Year Of Sale",
						"type": "String"
					},
					{
						"name": "Month Of Sale ",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_LKP_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ConfigFile.csv",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id ",
						"type": "String"
					},
					{
						"name": "Filename",
						"type": "String"
					},
					{
						"name": "FileType",
						"type": "String"
					},
					{
						"name": "sheetname",
						"type": "String"
					},
					{
						"name": "container",
						"type": "String"
					},
					{
						"name": "destcont",
						"type": "String"
					},
					{
						"name": "destfolder",
						"type": "String"
					},
					{
						"name": "destfilename",
						"type": "String"
					},
					{
						"name": "desexe",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_METACOLUMNS_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FILENAMEE": {
						"type": "string",
						"defaultValue": "2_wheels_mapping.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FILENAMEE",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "storagacc",
						"type": "String"
					},
					{
						"name": "container",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					},
					{
						"name": "destcontainer",
						"type": "String"
					},
					{
						"name": "destinationfolder",
						"type": "String"
					},
					{
						"name": "destinationfilename",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_METACOLUMNS_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "2-WheelSales.csv",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OEM",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "NoOfSales",
						"type": "String"
					},
					{
						"name": "EngineCapacity",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Model Price",
						"type": "String"
					},
					{
						"name": "Dealer location",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_RESTAPI_DEMO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_RESTAPI",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ROUTER": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().ROUTER",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_RESTAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_HISTORICALCONFIG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZURE_SQL_04",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SchemaName",
						"type": "varchar"
					},
					{
						"name": "SourceTableName",
						"type": "varchar"
					},
					{
						"name": "SourceColumnName",
						"type": "varchar"
					},
					{
						"name": "TargetSchema",
						"type": "varchar"
					},
					{
						"name": "TargetTableName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dev",
					"table": "TConfigHistoricalLoad"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZURE_SQL_04')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_SINK_SALES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZURE_SQL_04",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sales_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sales_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZURE_SQL_04')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_VALIDATE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"PARA_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().PARA_FILENAME",
							"type": "Expression"
						},
						"folderPath": "csv",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "TYPE",
						"type": "String"
					},
					{
						"name": "KIND",
						"type": "String"
					},
					{
						"name": "RESOURCE GROUP",
						"type": "String"
					},
					{
						"name": "LOCATION",
						"type": "String"
					},
					{
						"name": "SUBSCRIPTION",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OEM",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "NoOfSales",
						"type": "String"
					},
					{
						"name": "EngineCapacity",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Model Price",
						"type": "String"
					},
					{
						"name": "Dealer location",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "4-WheelSales.csv",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OEM",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "NoOfSales",
						"type": "String"
					},
					{
						"name": "EngineCapacity",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Model Price",
						"type": "String"
					},
					{
						"name": "Dealer location",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "holidays.csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Holidays",
						"type": "String"
					},
					{
						"name": " Date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3_dummy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Global Superstore.xls",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PK\u0003\u0004\u0014\u0000\u0006\u0000\b\u0000\u0000\u0000!\u0000b�h^\u0001\u0000\u0000�\u0004\u0000\u0000\u0013\u0000\b\u0002[Content_Types].xml �\u0004\u0002(�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���N�0\u0010E�H�C�-Jܲ@\b5��\u0012*Q>�ēƪc[�ii����\u0010B�\u0015j7�\u0012��{2��h�nm���ƻR\f����U^\u001b7/���%�\u0017\u0019�rZY�\u0014\u001b@1\u0019__�f�\u0000�q��R4D�AJ�\u001ah\u0015\u0016>����V\u0011�ƹ\f�Z�9����NV�\u00118ʩ�\u0010��\u0013�ji){^��-I\u0004�\"{�\u0016v^�P!XS)bR�r��K�s(�3�`c\u0002�0���\u000e���\u0006��7\u001eM4\u001a����ZƐk+�|\\|z�(���P��6\u0015h_-[�@�!���\u0000Pk��\u0016�2n�}�?\u0015�L��� ��%�\u0013\u001c��\u001bd����dN\u0018\"m",
						"type": "String"
					},
					{
						"name": "�ǞDO97*�~��ɸ8�O�c\u001c|n��\u0007�\u0004E��\u0014�\u0011���B\u0010��!$}�����;{���[����2�\u0006\u0000\u0000��\u0003\u0000PK\u0003\u0004\u0014\u0000\u0006\u0000\b\u0000\u0000\u0000!\u0000�U0#�\u0000\u0000\u0000L\u0002\u0000\u0000\u000b\u0000\b\u0002_rels/.rels �\u0004\u0002(�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000��MO�0\f��H�����ݐ\u0010BKwAH�!T~�I�\u000f���$\u001bݿ'\u001c\u0010T\u001a�\u0003G�~����<���!��4��\u0012\u0014;#�w����qu\u0007*&r�Fq���\u0011v�����GJy(v��*����K��#F��D�\u0010�.W\u001a\t\u0013�\u001c�\u0016=��Z�MY�b��\u0001�BS����7��ϛז��",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OEM",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "NoOfSales",
						"type": "String"
					},
					{
						"name": "EngineCapacity",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Model Price",
						"type": "String"
					},
					{
						"name": "Dealer location",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"para_sheetName": {
						"type": "string"
					},
					"para_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().para_sheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().para_filename",
							"type": "Expression"
						},
						"fileSystem": "src"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "patty_data.json",
						"fileSystem": "src"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"business_discovery": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"username": {
									"type": "string"
								},
								"website": {
									"type": "string"
								},
								"profile_picture_url": {
									"type": "string"
								},
								"biography": {
									"type": "string"
								},
								"followers_count": {
									"type": "integer"
								},
								"media_count": {
									"type": "integer"
								},
								"media": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string"
													},
													"caption": {
														"type": "string"
													},
													"comments_count": {
														"type": "integer"
													},
													"like_count": {
														"type": "integer"
													},
													"media_type": {
														"type": "string"
													},
													"media_url": {
														"type": "string"
													},
													"owner": {
														"type": "object",
														"properties": {
															"id": {
																"type": "string"
															}
														}
													},
													"timestamp": {
														"type": "string"
													}
												}
											}
										},
										"paging": {
											"type": "object",
											"properties": {
												"cursors": {
													"type": "object",
													"properties": {
														"before": {
															"type": "string"
														},
														"after": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"id": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "api.json",
						"folderPath": "API",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "employees"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"status": {
							"type": "string"
						},
						"data": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer"
									},
									"employee_name": {
										"type": "string"
									},
									"employee_salary": {
										"type": "integer"
									},
									"employee_age": {
										"type": "integer"
									},
									"profile_image": {
										"type": "string"
									}
								}
							}
						},
						"message": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json4_pat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "fb_data2.json",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"business_discovery": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"username": {
									"type": "string"
								},
								"website": {
									"type": "string"
								},
								"profile_picture_url": {
									"type": "string"
								},
								"biography": {
									"type": "string"
								},
								"followers_count": {
									"type": "integer"
								},
								"media_count": {
									"type": "integer"
								},
								"media": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"like_count": {
														"type": "integer"
													},
													"media_url": {
														"type": "string"
													},
													"caption": {
														"type": "string"
													},
													"comments_count": {
														"type": "integer"
													},
													"timestamp": {
														"type": "string"
													},
													"media_type": {
														"type": "string"
													},
													"id": {
														"type": "string"
													}
												}
											}
										},
										"paging": {
											"type": "object",
											"properties": {
												"cursors": {
													"type": "object",
													"properties": {
														"after": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"id": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"PARA_DIRECTORY": {
						"type": "string"
					},
					"PARA_FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().PARA_FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().PARA_DIRECTORY, '/' , utcNow('yyyy-MM'), '/', utcNow('dd'))\n",
							"type": "Expression"
						},
						"fileSystem": "generic"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/zoho_code')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ADLSTRAINIG",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "code_zoho.csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code_outh",
						"type": "String"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ADLSTRAINIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1new')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1new_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase14')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase14_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase14_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase14_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase14_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_ADLSTRAINIG')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"LS_ADLS_sRC"
				],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_ADLSTRAINIG_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_ADLSTRAINIG_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZURE_SQL_04')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_AZURE_SQL_04_properties_typeProperties_server')]",
					"database": "[parameters('LS_AZURE_SQL_04_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_AZURE_SQL_04_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AZURE_SQL_04_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_RESTAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_RESTAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_EVENT_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"TR_SAMPLE_Testing"
				],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/MOCK_DATA",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TR_EVENT_SAMPLE_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_EVENT_SAMPLE2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_TR_EVENT_SAMPLE",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_3",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/Events/csv",
					"blobPathEndsWith": "holidays.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TR_EVENT_SAMPLE2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TR_EVENT_SAMPLE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tr_event_zoho')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_GETACCESSTOKEN",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/Zoho_people_code",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Tr_event_zoho_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_GETACCESSTOKEN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_SAMPLE_SCHEDULE')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_SCHEDULE_dEMO",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2024-08-03T05:48:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_SCHEDULE_dEMO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_TUMBLING_SALES')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PL_HISTORICAL",
						"type": "PipelineReference"
					},
					"parameters": {
						"para_starttime": "[parameters('TR_TUMBLING_SALES_properties_pipeline_parameters_para_starttime')]",
						"para_endtime": "[parameters('TR_TUMBLING_SALES_properties_pipeline_parameters_para_endtime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2023-12-20T05:15:00Z",
					"endTime": "2023-12-27T05:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_HISTORICAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Month",
					"interval": 2,
					"startTime": "2024-08-03T06:03:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		}
	]
}